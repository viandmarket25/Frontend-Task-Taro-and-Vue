{"version":3,"file":"common.js","sources":["webpack:///._src_plugins_ajax.ts"],"sourcesContent":["import Taro from '@tarojs/taro'\n\nconst isUrl = (url: string): boolean => {\n  return /(((^https?:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+(?::\\d+)?|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)$/.test(\n    url\n  )\n}\nconst cookie: string = Taro.getStorageSync('cookie') || ''\n\nconst baseUrl = 'http://localhost:3000'\nclass Ajax {\n  get(url: string, data?: object, option?: object) {\n    return new Promise((resolve, reject) => {\n      Taro.request({\n        url: isUrl(url) ? url : baseUrl + url,\n        data: cookie\n          ? {\n              ...data,\n              cookie\n            }\n          : data,\n        method: 'GET',\n        header: {},\n        ...option,\n        success: function(res) {\n          resolve(res.data)\n        },\n        fail: function(err) {\n          reject(err)\n        }\n      })\n    })\n  }\n  post(url: string, data?: object, option?: object) {\n    return new Promise((resolve, reject) => {\n      Taro.request({\n        url: isUrl(url) ? url : baseUrl + url,\n        data: cookie\n          ? {\n              ...data,\n              cookie,\n              timestamp: new Date().getTime()\n            }\n          : {\n              ...data,\n              timestamp: new Date().getTime()\n            },\n        method: 'POST',\n        header: {},\n        ...option,\n        success: function(res) {\n          resolve(res.data)\n        },\n        fail: function(err) {\n          reject(err)\n        }\n      })\n    })\n  }\n}\n\nexport default new Ajax()\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAEA;AACA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AAGA;AAHA;AAMA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAkBA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAJA;AAQA;AARA;AAUA;AACA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AApBA;AAsBA;AACA;;;;;;AAGA;;;;A","sourceRoot":""}